{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/breadcrumb.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction BreadcrumbComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const breadcrumb_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", breadcrumb_r1.url);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(breadcrumb_r1.label);\n  }\n}\n\nfunction BreadcrumbComponent_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const breadcrumb_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(breadcrumb_r1.label);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\n\nfunction BreadcrumbComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 3);\n    i0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_1_ng_container_2_Template, 3, 2, \"ng-container\", 4);\n    i0.ɵɵtemplate(3, BreadcrumbComponent_ng_container_1_ng_container_3_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const last_r2 = ctx.last;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, last_r2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !last_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", last_r2);\n  }\n}\n\nexport class BreadcrumbComponent {\n  constructor(breadcrumbService, router) {\n    this.breadcrumbService = breadcrumbService;\n    this.router = router;\n    this.breadcrumbs = new Observable();\n  }\n\n  ngOnInit() {\n    this.breadcrumbs = this.breadcrumbService.breadcrumbs$;\n  }\n\n  addClicked() {\n    // Check if any breadcrumb's label contains \"category\"\n    this.breadcrumbs.pipe(map(items => items.some(breadcrumb => breadcrumb.label.toLowerCase().includes('category')))).subscribe(containsCategory => {\n      if (containsCategory) {\n        this.router.navigateByUrl('templates/category/create_template');\n      } else {\n        console.log('No breadcrumb contains \"category\".');\n      }\n    }); // Check if any breadcrumb's label contains \"job\"\n\n    this.breadcrumbs.pipe(map(items => items.some(breadcrumb => breadcrumb.label.toLowerCase().includes('category')))).subscribe(containsCategory => {\n      if (containsCategory) {\n        this.router.navigateByUrl('jobs/create_job');\n      } else {\n        console.log('No breadcrumb contains \"category\".');\n      }\n    });\n  }\n\n}\n\nBreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) {\n  return new (t || BreadcrumbComponent)(i0.ɵɵdirectiveInject(i1.BreadcrumbService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nBreadcrumbComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BreadcrumbComponent,\n  selectors: [[\"app-breadcrumb\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"breadcrumb\", \"breadcrumb-pos\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-add\", \"btn-secondary\", 3, \"click\"], [1, \"breadcrumb-item\", 3, \"ngClass\"], [4, \"ngIf\"], [3, \"routerLink\"]],\n  template: function BreadcrumbComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ol\", 0);\n      i0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_1_Template, 4, 5, \"ng-container\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function BreadcrumbComponent_Template_button_click_3_listener() {\n        return ctx.addClicked();\n      });\n      i0.ɵɵtext(4, \" + \");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx.breadcrumbs));\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.RouterLinkWithHref, i3.AsyncPipe],\n  styles: [\".btn-add[_ngcontent-%COMP%] {\\r\\n    border-radius: 50%;\\r\\n    text-align: center;\\r\\n    margin: -8px;\\r\\n    margin-left: 12px;\\r\\n}\\r\\n\\r\\n.breadcrumb-pos[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 0px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyZWFkY3J1bWIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJicmVhZGNydW1iLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWFkZCB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IC04cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTJweDtcclxufVxyXG5cclxuLmJyZWFkY3J1bWItcG9zIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDBweDtcclxufSJdfQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,UAAT,QAA2B,MAA3B;AAEA,SAASC,GAAT,QAAoB,gBAApB;;;;;;;;ICIYC;IACIA;IAAiCA;IAAsBA;IAC3DA;;;;;IADOA;IAAAA;IAA8BA;IAAAA;;;;;;IAErCA;IAA2BA;IAAsBA;;;;;IAAtBA;IAAAA;;;;;;;;;;;;IALnCA;IACIA;IACIA;IAGAA;IACJA;IACJA;;;;;IANgCA;IAAAA;IACTA;IAAAA;IAGAA;IAAAA;;;;ADA3B,OAAM,MAAOC,mBAAP,CAA0B;EAK9BC,YAAoBC,iBAApB,EAAkEC,MAAlE,EAAgF;IAA5D;IAA8C;IAFlE,mBAA4C,IAAIN,UAAJ,EAA5C;EAEqF;;EAErFO,QAAQ;IACN,KAAKC,WAAL,GAAmB,KAAKH,iBAAL,CAAuBI,YAA1C;EACD;;EAEDC,UAAU;IAER;IACA,KAAKF,WAAL,CACGG,IADH,CAEIV,GAAG,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAYC,UAAD,IAAgBA,UAAU,CAACC,KAAX,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwC,UAAxC,CAA3B,CAAZ,CAFP,EAIGC,SAJH,CAIcC,gBAAD,IAAqB;MAC9B,IAAIA,gBAAJ,EAAsB;QACpB,KAAKb,MAAL,CAAYc,aAAZ,CAA0B,oCAA1B;MACD,CAFD,MAEO;QACLC,OAAO,CAACC,GAAR,CAAY,oCAAZ;MACD;IACF,CAVH,EAHQ,CAeR;;IACA,KAAKd,WAAL,CACGG,IADH,CAEIV,GAAG,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAYC,UAAD,IAAgBA,UAAU,CAACC,KAAX,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwC,UAAxC,CAA3B,CAAZ,CAFP,EAIGC,SAJH,CAIcC,gBAAD,IAAqB;MAC9B,IAAIA,gBAAJ,EAAsB;QACpB,KAAKb,MAAL,CAAYc,aAAZ,CAA0B,iBAA1B;MACD,CAFD,MAEO;QACLC,OAAO,CAACC,GAAR,CAAY,oCAAZ;MACD;IACF,CAVH;EAaD;;AAxC6B;;;mBAAnBnB,qBAAmBD;AAAA;;;QAAnBC;EAAmBoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCNhCzB;MACIA;;MAQAA;MAA0CA;QAAA,OAAS0B,gBAAT;MAAqB,CAArB;MAAwB1B;MAAEA;;;;MAR/BA;MAAAA","names":["Observable","map","i0","BreadcrumbComponent","constructor","breadcrumbService","router","ngOnInit","breadcrumbs","breadcrumbs$","addClicked","pipe","items","some","breadcrumb","label","toLowerCase","includes","subscribe","containsCategory","navigateByUrl","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Dev\\Documents\\Angular\\EDS_UI\\src\\app\\components\\breadcrumb\\breadcrumb.component.ts","C:\\Users\\Dev\\Documents\\Angular\\EDS_UI\\src\\app\\components\\breadcrumb\\breadcrumb.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BreadcrumbService } from 'src/app/services/breadcrumb.service'\nimport { BreadcrumbItem } from 'src/app//models/breadcrumb_model';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.css']\n})\nexport class BreadcrumbComponent implements OnInit {\n\n\n  breadcrumbs: Observable<BreadcrumbItem[]> = new Observable<BreadcrumbItem[]>();\n\n  constructor(private breadcrumbService: BreadcrumbService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.breadcrumbs = this.breadcrumbService.breadcrumbs$;\n  }\n\n  addClicked(): void {\n\n    // Check if any breadcrumb's label contains \"category\"\n    this.breadcrumbs\n      .pipe(\n        map((items) => items.some((breadcrumb) => breadcrumb.label.toLowerCase().includes('category')))\n      )\n      .subscribe((containsCategory) => {\n        if (containsCategory) {\n          this.router.navigateByUrl('templates/category/create_template');\n        } else {\n          console.log('No breadcrumb contains \"category\".');\n        }\n      });\n\n    // Check if any breadcrumb's label contains \"job\"\n    this.breadcrumbs\n      .pipe(\n        map((items) => items.some((breadcrumb) => breadcrumb.label.toLowerCase().includes('category')))\n      )\n      .subscribe((containsCategory) => {\n        if (containsCategory) {\n          this.router.navigateByUrl('jobs/create_job');\n        } else {\n          console.log('No breadcrumb contains \"category\".');\n        }\n      });\n\n\n  }\n\n}\n","<!-- <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a href=\"#\">Templates</a></li>\n    <li class=\"breadcrumb-item active\" aria-current=\"page\">Category A</li>\n    <button class=\"btn btn-add btn-secondary\"> + </button>\n</ol> -->\n\n<ol class=\"breadcrumb breadcrumb-pos\">\n    <ng-container *ngFor=\"let breadcrumb of breadcrumbs | async; let last = last\">\n        <li class=\"breadcrumb-item\" [ngClass]=\"{'active': last}\">\n            <ng-container *ngIf=\"!last\">\n                <a [routerLink]=\"breadcrumb.url\">{{ breadcrumb.label }}</a>\n            </ng-container>\n            <ng-container *ngIf=\"last\">{{ breadcrumb.label }}</ng-container>\n        </li>\n    </ng-container>\n    <button class=\"btn btn-add btn-secondary\" (click)=\"addClicked()\"> + </button>\n</ol>"]},"metadata":{},"sourceType":"module"}